#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DNALabelSync
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DNASerial")]
	public partial class DNASerialDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAssemblyLineInformation(AssemblyLineInformation instance);
    partial void UpdateAssemblyLineInformation(AssemblyLineInformation instance);
    partial void DeleteAssemblyLineInformation(AssemblyLineInformation instance);
    partial void InsertItemMaster(ItemMaster instance);
    partial void UpdateItemMaster(ItemMaster instance);
    partial void DeleteItemMaster(ItemMaster instance);
    partial void InsertSerial_No__Tracker(Serial_No__Tracker instance);
    partial void UpdateSerial_No__Tracker(Serial_No__Tracker instance);
    partial void DeleteSerial_No__Tracker(Serial_No__Tracker instance);
    #endregion
		
		public DNASerialDataClassesDataContext() : 
				base(global::DNALabelSync.Properties.Settings.Default.DNASerialConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DNASerialDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DNASerialDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DNASerialDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DNASerialDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<AssemblyLineInformation> AssemblyLineInformations
		{
			get
			{
				return this.GetTable<AssemblyLineInformation>();
			}
		}
		
		public System.Data.Linq.Table<ItemMaster> ItemMasters
		{
			get
			{
				return this.GetTable<ItemMaster>();
			}
		}
		
		public System.Data.Linq.Table<Serial_No__Tracker> Serial_No__Trackers
		{
			get
			{
				return this.GetTable<Serial_No__Tracker>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AssemblyLineInformation")]
	public partial class AssemblyLineInformation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Line_No_;
		
		private string _Location;
		
		private string _Label_Path;
		
		private EntitySet<Serial_No__Tracker> _Serial_No__Trackers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLine_No_Changing(int value);
    partial void OnLine_No_Changed();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnLabel_PathChanging(string value);
    partial void OnLabel_PathChanged();
    #endregion
		
		public AssemblyLineInformation()
		{
			this._Serial_No__Trackers = new EntitySet<Serial_No__Tracker>(new Action<Serial_No__Tracker>(this.attach_Serial_No__Trackers), new Action<Serial_No__Tracker>(this.detach_Serial_No__Trackers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Line No.]", Storage="_Line_No_", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Line_No_
		{
			get
			{
				return this._Line_No_;
			}
			set
			{
				if ((this._Line_No_ != value))
				{
					this.OnLine_No_Changing(value);
					this.SendPropertyChanging();
					this._Line_No_ = value;
					this.SendPropertyChanged("Line_No_");
					this.OnLine_No_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(100)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Label Path]", Storage="_Label_Path", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Label_Path
		{
			get
			{
				return this._Label_Path;
			}
			set
			{
				if ((this._Label_Path != value))
				{
					this.OnLabel_PathChanging(value);
					this.SendPropertyChanging();
					this._Label_Path = value;
					this.SendPropertyChanged("Label_Path");
					this.OnLabel_PathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssemblyLineInformation_Serial_No__Tracker", Storage="_Serial_No__Trackers", ThisKey="Line_No_", OtherKey="Assembly_Line_No_")]
		public EntitySet<Serial_No__Tracker> Serial_No__Trackers
		{
			get
			{
				return this._Serial_No__Trackers;
			}
			set
			{
				this._Serial_No__Trackers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Serial_No__Trackers(Serial_No__Tracker entity)
		{
			this.SendPropertyChanging();
			entity.AssemblyLineInformation = this;
		}
		
		private void detach_Serial_No__Trackers(Serial_No__Tracker entity)
		{
			this.SendPropertyChanging();
			entity.AssemblyLineInformation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ItemMaster")]
	public partial class ItemMaster : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Item_Model_Number;
		
		private string _Description;
		
		private string _UPC_Code;
		
		private string _Label_Name;
		
		private string _Engine_Serial_No__Identifier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItem_Model_NumberChanging(string value);
    partial void OnItem_Model_NumberChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnUPC_CodeChanging(string value);
    partial void OnUPC_CodeChanged();
    partial void OnLabel_NameChanging(string value);
    partial void OnLabel_NameChanged();
    partial void OnEngine_Serial_No__IdentifierChanging(string value);
    partial void OnEngine_Serial_No__IdentifierChanged();
    #endregion
		
		public ItemMaster()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Item Model Number]", Storage="_Item_Model_Number", DbType="NVarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Item_Model_Number
		{
			get
			{
				return this._Item_Model_Number;
			}
			set
			{
				if ((this._Item_Model_Number != value))
				{
					this.OnItem_Model_NumberChanging(value);
					this.SendPropertyChanging();
					this._Item_Model_Number = value;
					this.SendPropertyChanged("Item_Model_Number");
					this.OnItem_Model_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(100)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[UPC Code]", Storage="_UPC_Code", DbType="NVarChar(100)")]
		public string UPC_Code
		{
			get
			{
				return this._UPC_Code;
			}
			set
			{
				if ((this._UPC_Code != value))
				{
					this.OnUPC_CodeChanging(value);
					this.SendPropertyChanging();
					this._UPC_Code = value;
					this.SendPropertyChanged("UPC_Code");
					this.OnUPC_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Label Name]", Storage="_Label_Name", DbType="NVarChar(50)")]
		public string Label_Name
		{
			get
			{
				return this._Label_Name;
			}
			set
			{
				if ((this._Label_Name != value))
				{
					this.OnLabel_NameChanging(value);
					this.SendPropertyChanging();
					this._Label_Name = value;
					this.SendPropertyChanged("Label_Name");
					this.OnLabel_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Engine Serial No. Identifier]", Storage="_Engine_Serial_No__Identifier", DbType="NVarChar(100)")]
		public string Engine_Serial_No__Identifier
		{
			get
			{
				return this._Engine_Serial_No__Identifier;
			}
			set
			{
				if ((this._Engine_Serial_No__Identifier != value))
				{
					this.OnEngine_Serial_No__IdentifierChanging(value);
					this.SendPropertyChanging();
					this._Engine_Serial_No__Identifier = value;
					this.SendPropertyChanged("Engine_Serial_No__Identifier");
					this.OnEngine_Serial_No__IdentifierChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[Serial No. Tracker]")]
	public partial class Serial_No__Tracker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Serial_No_;
		
		private System.Nullable<System.DateTime> _Production_Date_Time;
		
		private string _Location;
		
		private System.Nullable<int> _Assembly_Line_No_;
		
		private string _Item_Model_Number;
		
		private string _Engine_Serial_No_;
		
		private EntityRef<AssemblyLineInformation> _AssemblyLineInformation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSerial_No_Changing(string value);
    partial void OnSerial_No_Changed();
    partial void OnProduction_Date_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnProduction_Date_TimeChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnAssembly_Line_No_Changing(System.Nullable<int> value);
    partial void OnAssembly_Line_No_Changed();
    partial void OnItem_Model_NumberChanging(string value);
    partial void OnItem_Model_NumberChanged();
    partial void OnEngine_Serial_No_Changing(string value);
    partial void OnEngine_Serial_No_Changed();
    #endregion
		
		public Serial_No__Tracker()
		{
			this._AssemblyLineInformation = default(EntityRef<AssemblyLineInformation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Serial No.]", Storage="_Serial_No_", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Serial_No_
		{
			get
			{
				return this._Serial_No_;
			}
			set
			{
				if ((this._Serial_No_ != value))
				{
					this.OnSerial_No_Changing(value);
					this.SendPropertyChanging();
					this._Serial_No_ = value;
					this.SendPropertyChanged("Serial_No_");
					this.OnSerial_No_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Production Date/Time]", Storage="_Production_Date_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Production_Date_Time
		{
			get
			{
				return this._Production_Date_Time;
			}
			set
			{
				if ((this._Production_Date_Time != value))
				{
					this.OnProduction_Date_TimeChanging(value);
					this.SendPropertyChanging();
					this._Production_Date_Time = value;
					this.SendPropertyChanged("Production_Date_Time");
					this.OnProduction_Date_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Assembly Line No.]", Storage="_Assembly_Line_No_", DbType="Int")]
		public System.Nullable<int> Assembly_Line_No_
		{
			get
			{
				return this._Assembly_Line_No_;
			}
			set
			{
				if ((this._Assembly_Line_No_ != value))
				{
					this.OnAssembly_Line_No_Changing(value);
					this.SendPropertyChanging();
					this._Assembly_Line_No_ = value;
					this.SendPropertyChanged("Assembly_Line_No_");
					this.OnAssembly_Line_No_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Item Model Number]", Storage="_Item_Model_Number", DbType="NVarChar(100)")]
		public string Item_Model_Number
		{
			get
			{
				return this._Item_Model_Number;
			}
			set
			{
				if ((this._Item_Model_Number != value))
				{
					this.OnItem_Model_NumberChanging(value);
					this.SendPropertyChanging();
					this._Item_Model_Number = value;
					this.SendPropertyChanged("Item_Model_Number");
					this.OnItem_Model_NumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Engine Serial No.]", Storage="_Engine_Serial_No_", DbType="NVarChar(80)")]
		public string Engine_Serial_No_
		{
			get
			{
				return this._Engine_Serial_No_;
			}
			set
			{
				if ((this._Engine_Serial_No_ != value))
				{
					this.OnEngine_Serial_No_Changing(value);
					this.SendPropertyChanging();
					this._Engine_Serial_No_ = value;
					this.SendPropertyChanged("Engine_Serial_No_");
					this.OnEngine_Serial_No_Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AssemblyLineInformation_Serial_No__Tracker", Storage="_AssemblyLineInformation", ThisKey="Assembly_Line_No_", OtherKey="Line_No_", IsForeignKey=true)]
		public AssemblyLineInformation AssemblyLineInformation
		{
			get
			{
				return this._AssemblyLineInformation.Entity;
			}
			set
			{
				AssemblyLineInformation previousValue = this._AssemblyLineInformation.Entity;
				if (((previousValue != value) 
							|| (this._AssemblyLineInformation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AssemblyLineInformation.Entity = null;
						previousValue.Serial_No__Trackers.Remove(this);
					}
					this._AssemblyLineInformation.Entity = value;
					if ((value != null))
					{
						value.Serial_No__Trackers.Add(this);
						this._Assembly_Line_No_ = value.Line_No_;
					}
					else
					{
						this._Assembly_Line_No_ = default(Nullable<int>);
					}
					this.SendPropertyChanged("AssemblyLineInformation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
